import { FC, useEffect, useState } from 'react';
import './Me.module.css';
import styles from './Me.module.css';
import imgUrl from '../../assets/images/me.jpg';
import { lazy, Suspense } from 'react';

const LazyImg = lazy(() => import('../../Components/LazyImg'));

const content = {
  ru: {
    description: (
      <p>
        –ü—Ä–∏–≤–µ—Ç! –º–µ–Ω—è –∑–æ–≤—É—Ç –î–µ–º—å—è–Ω.
        <br />
        <br />–Ø ‚Äî Web-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑ –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥–∞, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—á–µ—Ç, —á—Ç–æ–±—ã –≤
        –º–∏—Ä–µ –±—ã–ª–æ –±–æ–ª—å—à–µ —É–¥–æ–±–Ω—ã—Ö –∏ –∫—Ä–∞—Å–∏–≤—ã—Ö –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤. –ú–æ–π –ø—É—Ç—å –≤
        –≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ –Ω–∞—á–∞–ª—Å—è, –∫–æ–≥–¥–∞ –æ–¥–∏–Ω –∏–∑ –º–æ–∏—Ö –¥—Ä—É–∑–µ–π –ø–æ–∫–∞–∑–∞–ª –º–Ω–µ, —á—Ç–æ –º–æ–∂–Ω–æ
        –¥–µ–ª–∞—Ç—å –≤—Å–µ–≥–æ –ª–∏—à—å —Å –ø–æ–º–æ—â—å—é —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞ –∫–æ–¥–∞ –∏ –¥–æ–º–∞—à–Ω–µ–≥–æ –ü–ö. –° —Ç–µ—Ö –ø–æ—Ä —è
        –æ—Å–≤–æ–∏–ª –º–Ω–æ–∂–µ—Å—Ç–≤–æ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π, –ø–æ–ª—É—á–∏–ª
        <strong>&nbsp;–∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏–π&nbsp;–æ–ø—ã—Ç</strong>, –∏ —Å —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ–º
        –∏—Å–ø–æ–ª—å–∑—É—é –∏—Ö –¥–ª—è –≤–æ–ø–ª–æ—â–µ–Ω–∏—è –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã—Ö –∏–¥–µ–π –≤ –∂–∏–∑–Ω—å.
        <br />
        <br />
        –Ø –≤–µ—Ä—é, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –æ–ø—ã—Ç ‚Äî —ç—Ç–æ –∫–ª—é—á –∫ —É—Å–ø–µ—Ö—É –ª—é–±–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞,
        –ø–æ—ç—Ç–æ–º—É –≤—Å–µ–≥–¥–∞ —Å—Ç—Ä–µ–º–ª—é—Å—å —Å–æ–∑–¥–∞–≤–∞—Ç—å –∏–Ω—Ç—É–∏—Ç–∏–≤–Ω–æ –ø–æ–Ω—è—Ç–Ω—ã–µ –∏ –æ—Ç–∑—ã–≤—á–∏–≤—ã–µ
        –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã. –ö—Ä–æ–º–µ —Ç–æ–≥–æ, —è —Ö–æ—á—É —Ä–∞–∑–≤–∏–≤–∞—Ç—å –Ω–∞–≤—ã–∫–∏, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π.
        <br />
        <br />
        –ö–æ–≥–¥–∞ —è –Ω–µ –ø–∏—à—É –∫–æ–¥, —è –ª—é–±–ª—é –∫–∞—Ç–∞—Ç—å—Å—è –ø–æ –≥–æ—Ä–æ–¥–∞–º –∏–ª–∏ –∑–∞—Å–Ω–µ–∂–µ–Ω–Ω—ã–º
        —Å–∫–ª–æ–Ω–∞–º, –∏–∑—É—á–∞—è –Ω–æ–≤—ã–µ –º–µ—Å—Ç–∞, —á—Ç–æ –ø–æ–º–æ–≥–∞–µ—Ç –º–Ω–µ –æ—Å—Ç–∞–≤–∞—Ç—å—Å—è –≤–¥–æ—Ö–Ω–æ–≤–ª–µ–Ω–Ω—ã–º –∏
        –Ω–∞—Ö–æ–¥–∏—Ç—å —Å–≤–µ–∂–∏–µ –∏–¥–µ–∏ –¥–ª—è —Å–≤–æ–∏—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤.
        <br />
        <br />
        –î–∞–≤–∞–π—Ç–µ –≤–º–µ—Å—Ç–µ —Å–¥–µ–ª–∞–µ–º –∫—Ä—É—Ç–æ!üòé
      </p>
    ),
  },
  en: {
    description: (
      <p>
        Hi! My name is Demian.
        <br />
        <br />I am a web developer from Saint Petersburg who wants to see more
        user-friendly and beautiful interfaces in the world. My journey into web
        development began when one of my friends showed me what could be done
        with just a code editor and a home PC. Since then, I have mastered many
        technologies, gained my first <strong>commercial experience</strong>,
        and I happily use them to bring creative ideas to life.
        <br />
        <br />
        I believe that user experience is the key to the success of any project,
        so I always strive to create intuitive and responsive interfaces.
        Additionally, I am eager to develop my skills related to motion and
        animation.
        <br />
        <br />
        When I'm not writing code, I love to travel to cities or ski down snowy
        slopes, exploring new places, which helps me stay inspired and find
        fresh ideas for my projects.
        <br />
        <br />
        Let's make something cool! üòé
      </p>
    ),
  },
};

export const Me: FC<{ lang: 'ru' | 'en' }> = ({ lang }) => {
  const { description } = content[lang];
  const [isImageLoaded, setIsImageLoaded] = useState(false);

  useEffect(() => {
    const loadImage = new Image();
    loadImage.src = imgUrl;
    loadImage.onload = () => setIsImageLoaded(true);
  }, []);

  return (
    <div className={styles['container']}>
      <div className={styles['textContainer']}>{description}</div>
      <div className={styles['photoContainer']}>
        <Suspense fallback={<div>Loading image...</div>}>
          <div className={styles['blurLoad']}>
            {isImageLoaded ? (
              <LazyImg
                className={styles['photo']}
                src={imgUrl}
                alt="my photo"
              />
            ) : (
              <div className={styles['loadingMessage']}>
                Image is loading...
              </div>
            )}
          </div>
        </Suspense>
      </div>
    </div>
  );
};
